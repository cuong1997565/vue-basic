{"remainingRequest":"/var/www/javascript/vuejs/vue-cnd/vue-router/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/javascript/vuejs/vue-cnd/vue-router/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/javascript/vuejs/vue-cnd/vue-router/src/views/Login.vue","mtime":1564383446848},{"path":"/var/www/javascript/vuejs/vue-cnd/vue-router/node_modules/cache-loader/dist/cjs.js","mtime":1564127716179},{"path":"/var/www/javascript/vuejs/vue-cnd/vue-router/node_modules/thread-loader/dist/cjs.js","mtime":1564127717859},{"path":"/var/www/javascript/vuejs/vue-cnd/vue-router/node_modules/babel-loader/lib/index.js","mtime":1564127721155},{"path":"/var/www/javascript/vuejs/vue-cnd/vue-router/node_modules/cache-loader/dist/cjs.js","mtime":1564127716179},{"path":"/var/www/javascript/vuejs/vue-cnd/vue-router/node_modules/vue-loader/lib/index.js","mtime":1564127714399}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport config from '@/config';\nexport default {\n  name: \"Login\",\n  beforeRouteEnter(to, from, next) {\n      if(localStorage.getItem(\"auth\")) {\n        return next({path : \"/home\"});\n      }\n      next();\n  },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      errors: {},\n      loading : false\n    };\n  },\n  methods: {\n    loginUser() {\n      this.loading = true;\n      axios\n        .post(`${config.apiUrl}/auth/login`, {\n          email: this.email,\n          password: this.password\n        })\n        .then(response => {\n            this.loading = false;\n            this.$root.auth = response.data.data;\n            localStorage.setItem(\"auth\", JSON.stringify(response.data.data));\n            this.$noty.success(\"Successfully logged in.\");\n            this.$router.push(\"home\");\n        })\n        .catch(({response}) => {\n          this.loading = false;\n          this.$noty.error(\"Oops ! something went wrong .\");\n          if (response.status === 401) {\n            this.errors = {\n              email: [\"These credentials do not match our records\"]\n            };\n          } else {\n            this.errors = response.data;\n          }\n        });\n    }\n  }\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-md-8 offset-md-2\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h3 class=\"text-center\">Login</h3>\n          <form>\n            <div class=\"form-group\">\n              <label>Email :</label>\n              <input\n                v-bind:class=\"{'is-invalid' : errors.email}\"\n                v-model=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                class=\"form-control\"\n              />\n              <div class=\"errors\" v-if=\"errors.email\">\n                <small class=\"text-danger\" :key=\"error\" v-for=\"error in errors.email\">{{ error }}</small>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label>Password :</label>\n              <input\n                v-bind:class=\"{'is-invalid' : errors.password}\"\n                v-model=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                class=\"form-control\"\n              />\n              <div class=\"errors\" v-if=\"errors.password\">\n                <small class=\"text-danger\" v-for=\"error in errors.password\" :key=\"error\">{{ error }}</small>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button @click=\"loginUser()\" :disabled=\"loading\" class=\"btn btn-success form-control\">\n                  <i class=\"fa fa-spin fa-spinner\" v-if=\"loading\"></i>\n                  {{ loading ? '' : 'Login' }}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport config from '@/config';\nexport default {\n  name: \"Login\",\n  beforeRouteEnter(to, from, next) {\n      if(localStorage.getItem(\"auth\")) {\n        return next({path : \"/home\"});\n      }\n      next();\n  },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      errors: {},\n      loading : false\n    };\n  },\n  methods: {\n    loginUser() {\n      this.loading = true;\n      axios\n        .post(`${config.apiUrl}/auth/login`, {\n          email: this.email,\n          password: this.password\n        })\n        .then(response => {\n            this.loading = false;\n            this.$root.auth = response.data.data;\n            localStorage.setItem(\"auth\", JSON.stringify(response.data.data));\n            this.$noty.success(\"Successfully logged in.\");\n            this.$router.push(\"home\");\n        })\n        .catch(({response}) => {\n          this.loading = false;\n          this.$noty.error(\"Oops ! something went wrong .\");\n          if (response.status === 401) {\n            this.errors = {\n              email: [\"These credentials do not match our records\"]\n            };\n          } else {\n            this.errors = response.data;\n          }\n        });\n    }\n  }\n};\n</script>\n<style scoped>\n.is-invalid {\n  border: 1px solid red;\n}\n</style>\n\n\n"]}]}